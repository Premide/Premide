<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="clickButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AUKkV0sOCAeaCCCFf//Z
</value>
  </data>
</root>